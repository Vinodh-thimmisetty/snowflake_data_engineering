-- ENABLE AI 
use role accountadmin;
ALTER ACCOUNT SET CORTEX_ENABLED_CROSS_REGION = 'AWS_US';
SHOW PARAMETERS LIKE 'CORTEX_ENABLED_CROSS_REGION' IN ACCOUNT;

-- SYSADMIN ROLE is responsible for DB, WH and other Object level Management
use role sysadmin;

-- use Cortext AI to generate SQL scripts.

/**
ROLE Creation Prompt: 
Create standard roles needed for new project AQI. Make sure you generate all available options with Default values set. Generate appropriate Comments for each role
*/

-- Roles
CREATE ROLE AQI_PROD_ADMIN COMMENT = 'Production Admin role for AQI project with full access to production resources';
CREATE ROLE AQI_PROD_READ COMMENT = 'Production Read-only role for AQI project';
CREATE ROLE AQI_PROD_WRITE COMMENT = 'Production Write role for AQI project';
CREATE ROLE AQI_DEV_ADMIN COMMENT = 'Development Admin role for AQI project with full access to development resources';
CREATE ROLE AQI_DEV_READ COMMENT = 'Development Read-only role for AQI project';
CREATE ROLE AQI_DEV_WRITE COMMENT = 'Development Write role for AQI project';
CREATE ROLE AQI_TEST_ADMIN COMMENT = 'Test Admin role for AQI project with full access to test resources';
CREATE ROLE AQI_TEST_READ COMMENT = 'Test Read-only role for AQI project';
CREATE ROLE AQI_TEST_WRITE COMMENT = 'Test Write role for AQI project';

-- Grants
GRANT ROLE AQI_PROD_READ TO ROLE AQI_PROD_WRITE;
GRANT ROLE AQI_PROD_WRITE TO ROLE AQI_PROD_ADMIN;
GRANT ROLE AQI_DEV_READ TO ROLE AQI_DEV_WRITE;
GRANT ROLE AQI_DEV_WRITE TO ROLE AQI_DEV_ADMIN;
GRANT ROLE AQI_QA_READ TO ROLE AQI_QA_WRITE;
GRANT ROLE AQI_QA_WRITE TO ROLE AQI_QA_ADMIN;
GRANT ROLE AQI_PROD_ADMIN TO ROLE SYSADMIN;
GRANT ROLE AQI_DEV_ADMIN TO ROLE SYSADMIN;
GRANT ROLE AQI_QA_ADMIN TO ROLE SYSADMIN;
 

/**

Warehouse Creation Prompt:
Create multiple Standard XS Warehouses with clustering enabled. Warehouse names are LOAD_WH, TRANSFORM_WH, STREATMLIT_WH, ADHOC_WH. Make sure you generate all available options with Default values set. Generate appropriate Comments for each warehouse. Let it be in suspended state initially and also suspend if warehouse is in-active for a 5 minute
*/

CREATE OR REPLACE WAREHOUSE LOAD_WH 
WITH WAREHOUSE_SIZE = 'XSMALL'
WAREHOUSE_TYPE = 'STANDARD' 
AUTO_SUSPEND = 60
AUTO_RESUME = TRUE
INITIALLY_SUSPENDED = TRUE
MIN_CLUSTER_COUNT = 1
MAX_CLUSTER_COUNT = 1
SCALING_POLICY = 'STANDARD'
COMMENT = 'Warehouse dedicated to data loading and ingestion operations'
ENABLE_QUERY_ACCELERATION = FALSE
QUERY_ACCELERATION_MAX_SCALE_FACTOR = 0;

CREATE OR REPLACE WAREHOUSE TRANSFORM_WH 
WITH WAREHOUSE_SIZE = 'XSMALL'
WAREHOUSE_TYPE = 'STANDARD' 
AUTO_SUSPEND = 60
AUTO_RESUME = TRUE
INITIALLY_SUSPENDED = TRUE
MIN_CLUSTER_COUNT = 1
MAX_CLUSTER_COUNT = 1
SCALING_POLICY = 'STANDARD'
COMMENT = 'Warehouse for data transformation and ETL processes'
ENABLE_QUERY_ACCELERATION = FALSE
QUERY_ACCELERATION_MAX_SCALE_FACTOR = 0;

CREATE OR REPLACE WAREHOUSE STREAMLIT_WH 
WITH WAREHOUSE_SIZE = 'XSMALL'
WAREHOUSE_TYPE = 'STANDARD' 
AUTO_SUSPEND = 60
AUTO_RESUME = TRUE
INITIALLY_SUSPENDED = TRUE
MIN_CLUSTER_COUNT = 1
MAX_CLUSTER_COUNT = 1
SCALING_POLICY = 'STANDARD'
COMMENT = 'Dedicated warehouse for Streamlit application queries and operations'
ENABLE_QUERY_ACCELERATION = FALSE
QUERY_ACCELERATION_MAX_SCALE_FACTOR = 0;

CREATE OR REPLACE WAREHOUSE ADHOC_WH 
WITH WAREHOUSE_SIZE = 'XSMALL'
WAREHOUSE_TYPE = 'STANDARD' 
AUTO_SUSPEND = 60
AUTO_RESUME = TRUE
INITIALLY_SUSPENDED = TRUE
MIN_CLUSTER_COUNT = 1
MAX_CLUSTER_COUNT = 1
SCALING_POLICY = 'STANDARD'
COMMENT = 'Dedicated warehouse for Adhoc activities'
ENABLE_QUERY_ACCELERATION = FALSE
QUERY_ACCELERATION_MAX_SCALE_FACTOR = 0;

/**

Database/Schema Creation Prompt:

Create a Database without TimeTravel or FailSafe features with name AQI_DEV_DB. Create Multiple Schemas namely STAGING, CLEAN, CONSUMPTION and PUBLISH under this DB with same setup. Make sure you generate all available options with Default values set for both database and schemas. I will review and correct if any default needs to be changed. Also, Generate appropriate Comments for each object. 
*/


CREATE OR REPLACE DATABASE AQI_DEV_DB
    DATA_RETENTION_TIME_IN_DAYS = 1
    MAX_DATA_EXTENSION_TIME_IN_DAYS = 0
    DEFAULT_DDL_COLLATION = 'utf8'
    COMMENT = 'Development Database for Air Quality Index Data Processing';

CREATE OR REPLACE SCHEMA AQI_DEV_DB.STAGING 
    WITH MANAGED ACCESS
    DATA_RETENTION_TIME_IN_DAYS = 0
    COMMENT = 'Landing zone for raw data ingestion';

CREATE OR REPLACE SCHEMA AQI_DEV_DB.CLEAN 
    WITH MANAGED ACCESS
    DATA_RETENTION_TIME_IN_DAYS = 0
    COMMENT = 'Standardized and validated data layer';

CREATE OR REPLACE SCHEMA AQI_DEV_DB.CONSUMPTION 
    WITH MANAGED ACCESS
    DATA_RETENTION_TIME_IN_DAYS = 0
    COMMENT = 'Business logic applied data ready for analysis';

CREATE OR REPLACE SCHEMA AQI_DEV_DB.PUBLISH 
    WITH MANAGED ACCESS
    DATA_RETENTION_TIME_IN_DAYS = 0
    COMMENT = 'Curated datasets for reporting and external sharing';



GRANT USAGE ON DATABASE AQI_DEV_DB TO ROLE AQI_DEV_ADMIN;
GRANT USAGE ON DATABASE AQI_DEV_DB TO ROLE AQI_DEV_WRITE;
GRANT USAGE ON DATABASE AQI_DEV_DB TO ROLE AQI_DEV_READ;

GRANT ALL PRIVILEGES ON DATABASE AQI_DEV_DB TO ROLE AQI_DEV_ADMIN;

GRANT USAGE ON ALL SCHEMAS IN DATABASE AQI_DEV_DB TO ROLE AQI_DEV_ADMIN;
GRANT USAGE ON ALL SCHEMAS IN DATABASE AQI_DEV_DB TO ROLE AQI_DEV_WRITE;
GRANT USAGE ON ALL SCHEMAS IN DATABASE AQI_DEV_DB TO ROLE AQI_DEV_READ;

GRANT CREATE TABLE, CREATE VIEW, CREATE STAGE, CREATE PIPE, CREATE TASK, CREATE PROCEDURE, CREATE FUNCTION
ON ALL SCHEMAS IN DATABASE AQI_DEV_DB 
TO ROLE AQI_DEV_ADMIN;

GRANT SELECT, INSERT, UPDATE, DELETE ON ALL TABLES IN SCHEMA AQI_DEV_DB.STAGING TO ROLE AQI_DEV_WRITE;
GRANT SELECT, INSERT, UPDATE, DELETE ON ALL TABLES IN SCHEMA AQI_DEV_DB.CLEAN TO ROLE AQI_DEV_WRITE;
GRANT SELECT, INSERT, UPDATE, DELETE ON ALL TABLES IN SCHEMA AQI_DEV_DB.CONSUMPTION TO ROLE AQI_DEV_WRITE;
GRANT SELECT, INSERT, UPDATE, DELETE ON ALL TABLES IN SCHEMA AQI_DEV_DB.PUBLISH TO ROLE AQI_DEV_WRITE;

GRANT SELECT ON ALL TABLES IN SCHEMA AQI_DEV_DB.STAGING TO ROLE AQI_DEV_READ;
GRANT SELECT ON ALL TABLES IN SCHEMA AQI_DEV_DB.CLEAN TO ROLE AQI_DEV_READ;
GRANT SELECT ON ALL TABLES IN SCHEMA AQI_DEV_DB.CONSUMPTION TO ROLE AQI_DEV_READ;
GRANT SELECT ON ALL TABLES IN SCHEMA AQI_DEV_DB.PUBLISH TO ROLE AQI_DEV_READ;

GRANT SELECT ON FUTURE TABLES IN SCHEMA AQI_DEV_DB.STAGING TO ROLE AQI_DEV_READ;
GRANT SELECT ON FUTURE TABLES IN SCHEMA AQI_DEV_DB.CLEAN TO ROLE AQI_DEV_READ;
GRANT SELECT ON FUTURE TABLES IN SCHEMA AQI_DEV_DB.CONSUMPTION TO ROLE AQI_DEV_READ;
GRANT SELECT ON FUTURE TABLES IN SCHEMA AQI_DEV_DB.PUBLISH TO ROLE AQI_DEV_READ;

GRANT SELECT, INSERT, UPDATE, DELETE ON FUTURE TABLES IN SCHEMA AQI_DEV_DB.STAGING TO ROLE AQI_DEV_WRITE;
GRANT SELECT, INSERT, UPDATE, DELETE ON FUTURE TABLES IN SCHEMA AQI_DEV_DB.CLEAN TO ROLE AQI_DEV_WRITE;
GRANT SELECT, INSERT, UPDATE, DELETE ON FUTURE TABLES IN SCHEMA AQI_DEV_DB.CONSUMPTION TO ROLE AQI_DEV_WRITE;
GRANT SELECT, INSERT, UPDATE, DELETE ON FUTURE TABLES IN SCHEMA AQI_DEV_DB.PUBLISH TO ROLE AQI_DEV_WRITE;

GRANT USAGE ON FUTURE SCHEMAS IN DATABASE AQI_DEV_DB TO ROLE AQI_DEV_ADMIN;
GRANT USAGE ON FUTURE SCHEMAS IN DATABASE AQI_DEV_DB TO ROLE AQI_DEV_WRITE;
GRANT USAGE ON FUTURE SCHEMAS IN DATABASE AQI_DEV_DB TO ROLE AQI_DEV_READ;
