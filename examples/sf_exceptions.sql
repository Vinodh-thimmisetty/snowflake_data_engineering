DECLARE
    MY_CUSTOM_EXCEPTION EXCEPTION (-20001, 'Some message'); 
BEGIN
    let err_msg text default '';
    -- DROP TABLE DUMMY.TMP.NOT_EXISTS; -- STATEMENT_ERROR
    RAISE my_custom_exception;
    -- SELECT COUNT(1) FROM DUMMY.TMP.NOT_EXISTS; -- STATEMENT_ERROR
    -- LET tmp number := 1/0; -- EXPRESSION_ERROR
    -- LET tmp NUMBER DEFAULT (SELECT COUNT(1) FROM DUMMY.TMP.NOT_EXISTS); -- EXPRESSION_ERROR
    EXCEPTION
        -- WHEN STATEMENT_ERROR AND EXPRESSION_ERROR THEN EXECUTE IMMEDIATE 'SELECT 100'; RETURN -1; -- wont work
        -- WHEN STATEMENT_ERROR OR EXPRESSION_ERROR THEN EXECUTE IMMEDIATE 'SELECT 100'; RETURN -1; -- okay
        -- WHEN  EXPRESSION_ERROR OR STATEMENT_ERROR THEN EXECUTE IMMEDIATE 'SELECT 100'; RETURN -1; -- okay
        WHEN  MY_CUSTOM_EXCEPTION THEN 
            err_msg := 'SQL Code = ' || SQLCODE || ', SQLERRM = ' || SQLERRM || ', SQLSTATE= ' || SQLSTATE ;
            -- INSERT INTO ERROR_LOG_TABLE (MSG) VALUES(:err_msg);
            RETURN -100;
            -- EXECUTE IMMEDIATE 'SELECT 100'; RETURN -100; -- okay
        -- WHEN EXPRESSION_ERROR THEN EXECUTE IMMEDIATE 'SELECT 100'; RETURN -1;
        -- WHEN STATEMENT_ERROR THEN EXECUTE IMMEDIATE 'SELECT 200'; RETURN -2;
        -- WHEN OTHER THEN EXECUTE IMMEDIATE 'SELECT 300'; RETURN -3;
    RETURN 'Dropped';
END;

SELECT * FROM SNOWFLAKE.ACCOUNT_USAGE.QUERY_HISTORY 
WHERE EXECUTION_STATUS='FAIL' ORDER BY 1 DESC LIMIT 10;

SELECT * FROM SNOWFLAKE.ACCOUNT_USAGE.LOAD_HISTORY;